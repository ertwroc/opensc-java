<?xml version="1.0"?>
<project
   xmlns="http://maven.apache.org/POM/4.0.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opensc</groupId>
  <artifactId>opensc-PKCS11</artifactId>
  <properties>
    <project.majorVersion>0.2</project.majorVersion>
    <jni.classifier>${os.name}-${os.arch}</jni.classifier>
    <jni.libPrefix>lib</jni.libPrefix>
    <jni.libExtension>so</jni.libExtension>
    <jni.targetDir>target</jni.targetDir>
    <org.opensc.pkcs11.distRepoId>clazzes-repository</org.opensc.pkcs11.distRepoId>
    <org.opensc.pkcs11.distRepoURL>scpexe://maven.clazzes.org/var/www/htdocs/maven.clazzes.org</org.opensc.pkcs11.distRepoURL>
   </properties>
  <version>0.2.3</version>
  
  <distributionManagement>
    <repository>
      <id>${org.opensc.pkcs11.distRepoId}</id>
      <url>${org.opensc.pkcs11.distRepoURL}</url>
    </repository>
  </distributionManagement>
   <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ssh-external</artifactId>
         <version>1.0-alpha-5</version>
      </extension>
    </extensions>
    <sourceDirectory>java/src</sourceDirectory>
    <testSourceDirectory>test/src</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
           <id>pkg-sources</id>
           <goals><goal>jar</goal></goals>
           <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
         <execution>
           <id>ant-jnipkg</id>
           <goals><goal>run</goal></goals>
           <phase>package</phase>
           <configuration>
            <tasks>
              <zip zipfile="${jni.targetDir}/${project.artifactId}-${project.version}-${jni.classifier}.zip">
                <fileset dir="/usr/lib/jni">
                  <include name="${jni.libPrefix}${project.artifactId}-${project.majorVersion}.${jni.libExtension}" />
                </fileset>
              </zip>
              <zip zipfile="${jni.targetDir}/${project.artifactId}-${project.version}-Windows-x86.zip">
                <fileset dir="/usr/i686-pc-mingw32/bin">
                  <include name="${project.artifactId}-${project.majorVersion}.dll" />
                </fileset>
              </zip>
              <zip zipfile="${jni.targetDir}/${project.artifactId}-${project.version}-Windows-x64.zip">
                <fileset dir="/usr/x86_64-pc-mingw32/bin">
                  <include name="${project.artifactId}-${project.majorVersion}.dll" />
                </fileset>
              </zip>
             </tasks>
           </configuration>
         </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}-${jni.classifier}.zip</file>
                  <type>zip</type>
                  <classifier>${jni.classifier}</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}-Windows-x86.zip</file>
                  <type>zip</type>
                  <classifier>Windows-x86</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}-Windows-x64.zip</file>
                  <type>zip</type>
                  <classifier>Windows-x64</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Run test explicitly using 'mvn test -Dtest=TestProvider' -->
          <excludes>
            <exclude>**/TestProvider.java</exclude>
          </excludes>
          <argLine>-Djava.library.path=${jni.targetDir}/lib</argLine>
        </configuration>
      </plugin>
    </plugins>
   </build>
  
  <profiles>
    <profile>
      <id>opensc-pkcs11-sign</id>
      <build>
       <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
           <execution>
            <id>sign-jar</id>
            <goals><goal>sign</goal></goals>
            <phase>package</phase>
            <configuration>
              <verify>true</verify>
              <alias>${org.opensc.pkcs11.alias}</alias>
              <keypass>${org.opensc.pkcs11.keypass}</keypass>
              <storepass>${org.opensc.pkcs11.storepass}</storepass>
              <keystore>${org.opensc.pkcs11.keystore}</keystore>
            </configuration>
           </execution>
          </executions>
        </plugin>
       </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.15</version>
      <scope>test</scope>
    </dependency>
     <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <type>jar</type>
      <scope>test</scope>
      <optional>true</optional>
    </dependency>
   </dependencies>
   
   <pluginRepositories>
     <pluginRepository>
      <id>codehaus-mojo-repo</id>
      <name>codehaus.org mojo plugin repository.</name>
      <url>http://repository.codehaus.org/org/codehaus/mojo/</url>
     </pluginRepository>
   </pluginRepositories>
   
</project>
